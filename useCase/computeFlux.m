function flux = computeFlux(p0, p1, t0, te, vel, pfun,curve, T )
% Return the exact flux through line segment p0-p1 with time [t0,te]
%  for velocity field vortexShear2.
% The divergence-free condition of velocity field is required.
% The outward normal is the RHS of ray p0->p1;
%  which agrees to the convention of counter-clockwise polygon.
% Hence positive flux implies out-flow.
% integrand = 1 : the flux is \int u\cdot n
%           = 2 : the flux is \int f*u \cdot n where
%                 f = sin(2\pi x)sin(2*\pi y)

if exist('T','var')==0
    T = 2;
end


x0 = p0(1); y0 = p0(2);
x1 = p1(1); y1 = p1(2);
pi2 = pi*pi;


if  ~exist('curve','var')
    if  isequal(vel, @velRotationTimeDep) && isequal(pfun,@pfunRotationTimeDep)
        %      flux = 100/24*(te-t0)*(-3*te*x0^4+3*te*y0^4-3*te*y1^4+3*te*x1^4-2*t0*x1^2*y0^2+3*t0*y0^4-3*t0*x0^4+3*t0*x1^4-3*t0*y1^4-4*t0*x1*x0*y0^2+4*t0*x0^2*y1*y0-4*t0*x1^2*y1*y0+4*t0*x1*x0*y1^2+2*t0*x0^2*y1^2+2*te*x1^3*y0*t0-2*te*x1^2*y0^2-6*te*x0^3*y0*t0-2*te*x1^2*y1*t0*x0+2*te*x1^2*x0*y0*t0-2*te*y1^2*y0*t0*x1-6*te*y0^3*t0*x0-2*te*y0^3*t0*x1+2*te*y1^3*t0*x0+6*te*y1^3*t0*x1+6*te*x1^3*y1*t0-2*te*x0^3*y1*t0-4*te*x1*x0*y0^2+4*te*x0^2*y1*y0-4*te*x1^2*y1*y0+4*te*x1*x0*y1^2+2*te*x0^2*y1^2-2*te*x0^2*y1*t0*x1-2*te*y1*y0^2*t0*x1+2*te*x1*x0^2*y0*t0+2*te*y1*y0^2*t0*x0+2*te*y1^2*y0*t0*x0-6*y1^3*x1-2*y1^3*x0-2*y1*y0^2*x0+2*y1*y0^2*x1+2*y0^3*x1+2*x0^3*y1+6*x0^3*y0-6*x1^3*y1-2*x1^3*y0+6*y0^3*x0+2*x1*x0^2*y1+2*x1^2*x0*y1-2*x1^2*x0*y0-2*x1*x0^2*y0+2*y1^2*x1*y0-2*y1^2*x0*y0)/(1+t0^2)/(1+te^2);
        
        flux=(-25/6).*((1+t0.^2) ...
            .^(-1).*(3.*x0.^4+(-3).*x1.^4+(-3).*y0.^4+3.*y1.^4+2.*t0.*x0.^3.*( ...
            3.*y0+y1)+2.*x1.^2.*y0.*(y0+2.*y1)+(-2).*t0.*x1.^3.*(y0+3.*y1)+2.* ...
            t0.*x1.*(y0.^3+y0.^2.*y1+y0.*y1.^2+(-3).*y1.^3)+(-2).*x0.^2.*(t0.* ...
            x1.*(y0+(-1).*y1)+y1.*(2.*y0+y1))+2.*x0.*(y0+(-1).*y1).*(2.*x1.*( ...
            y0+y1)+t0.*((-1).*x1.^2+3.*y0.^2+2.*y0.*y1+y1.^2)))+(1+te.^2).^( ...
            -1).*((-3).*x0.^4+3.*x1.^4+(-2).*te.*x0.^3.*(3.*y0+y1)+(-2).* ...
            x1.^2.*y0.*(y0+2.*y1)+2.*te.*x1.^3.*(y0+3.*y1)+(-2).*te.*x1.*( ...
            y0.^3+y0.^2.*y1+y0.*y1.^2+(-3).*y1.^3)+3.*(y0.^4+(-1).*y1.^4)+2.* ...
            x0.^2.*(te.*x1.*(y0+(-1).*y1)+y1.*(2.*y0+y1))+(-2).*x0.*(y0+(-1).* ...
            y1).*(2.*x1.*(y0+y1)+te.*((-1).*x1.^2+3.*y0.^2+2.*y0.*y1+y1.^2)))) ...
            ;
    elseif isequal(vel, @velStrainTimeDep) && isequal(pfun, @pfunStrainTimeDep)
        T = 1;
        flux = (-256/33*y1^2*y0*exp(-3*te^2/T)+1280/9*y0^3*exp(-3*te^2/T)-256/297*y1^3*exp(-3*te^2/T)+256/33*y0*exp(-5*te^2/T)*x1^2-256/33*y0*exp(-5*t0^2/T)*x1^2-1280/9*y0^3*exp(-3*t0^2/T)+256/297*y1^3*exp(-3*t0^2/T)-256/33*y1*exp(-5*te^2/T)*x1^2+1280/33*y1*y0^2*exp(-3*t0^2/T)+256/33*y1^2*y0*exp(-3*t0^2/T)+256/33*y1*exp(-5*t0^2/T)*x1^2-1280/33*y1*y0^2*exp(-3*te^2/T))*x0^9+(256/33*y1*exp(-5*t0^2/T)*x1+256/33*y0*exp(-5*te^2/T)*x1-256/33*y1*exp(-5*te^2/T)*x1-256/33*y0*exp(-5*t0^2/T)*x1)*x0^10+(256/15*y0*exp(-5*te^2/T)+256/33*y1*exp(-5*t0^2/T)-256/15*y0*exp(-5*t0^2/T)-256/33*y1*exp(-5*te^2/T))*x0^11+(-512/33*y1^2*x1^3*y0*exp(-3*te^2/T)+1280/693*y1^5*x1*exp(-t0^2/T)+2048/99*y1^3*x1*y0^2*exp(-t0^2/T)+512/33*y1^2*x1^3*y0*exp(-3*t0^2/T)+5888/693*y1^4*x1*y0*exp(-t0^2/T)-7168/297*y0^3*x1^3*exp(-3*t0^2/T)+512/33*y1*y0^4*x1*exp(-t0^2/T)-1280/693*y1^5*x1*exp(-te^2/T)-256/33*y1*exp(-5*te^2/T)*x1^5-256/33*y0*exp(-5*t0^2/T)*x1^5-2560/33*y0^5*x1*exp(-t0^2/T)-5888/693*y1^4*x1*y0*exp(-te^2/T)-2560/297*y1^3*x1^3*exp(-3*te^2/T)+2560/33*y0^5*x1*exp(-te^2/T)+7168/297*y0^3*x1^3*exp(-3*te^2/T)-512/33*y1*y0^4*x1*exp(-te^2/T)+2560/297*y1^3*x1^3*exp(-3*t0^2/T)-2048/99*y1^3*x1*y0^2*exp(-te^2/T)+256/33*y1*exp(-5*t0^2/T)*x1^5-1024/33*y1^2*x1*y0^3*exp(-te^2/T)+1024/33*y1^2*x1*y0^3*exp(-t0^2/T)+256/33*y0*exp(-5*te^2/T)*x1^5)*x0^6+(2560/33*y1*y0^4*exp(-t0^2/T)-512/99*y1^3*x1^2*exp(-3*te^2/T)+256/99*y1^4*y0*exp(-t0^2/T)+256/33*y0*exp(-5*te^2/T)*x1^4+1024/99*y1^3*y0^2*exp(-t0^2/T)-1024/99*y1*x1^2*y0^2*exp(-3*te^2/T)+1024/33*y0^3*x1^2*exp(-3*te^2/T)-2560/3*y0^5*exp(-t0^2/T)-512/33*y1^2*x1^2*y0*exp(-3*te^2/T)+512/33*y1^2*x1^2*y0*exp(-3*t0^2/T)+256/33*y1*exp(-5*t0^2/T)*x1^4+512/99*y1^3*x1^2*exp(-3*t0^2/T)+1024/99*y1*x1^2*y0^2*exp(-3*t0^2/T)+1024/33*y1^2*y0^3*exp(-t0^2/T)-1024/99*y1^3*y0^2*exp(-te^2/T)-256/693*y1^5*exp(-te^2/T)-1024/33*y1^2*y0^3*exp(-te^2/T)-256/33*y1*exp(-5*te^2/T)*x1^4+256/693*y1^5*exp(-t0^2/T)-256/33*y0*exp(-5*t0^2/T)*x1^4-2560/33*y1*y0^4*exp(-te^2/T)+2560/3*y0^5*exp(-te^2/T)-256/99*y1^4*y0*exp(-te^2/T)-1024/33*y0^3*x1^2*exp(-3*t0^2/T))*x0^7+(256/33*y0*exp(-5*te^2/T)*x1^3+1280/33*y0^3*x1*exp(-3*te^2/T)-1280/33*y0^3*x1*exp(-3*t0^2/T)-256/99*y1^3*x1*exp(-3*te^2/T)-256/33*y0*exp(-5*t0^2/T)*x1^3+256/99*y1^3*x1*exp(-3*t0^2/T)+1280/99*y1^2*x1*y0*exp(-3*t0^2/T)-256/33*y1*exp(-5*te^2/T)*x1^3+256/11*y1*y0^2*x1*exp(-3*t0^2/T)-256/11*y1*y0^2*x1*exp(-3*te^2/T)-1280/99*y1^2*x1*y0*exp(-3*te^2/T)+256/33*y1*exp(-5*t0^2/T)*x1^3)*x0^8-2560/33*y1^4*x1^7*y0*exp(-t0^2/T)+(-256/15*y0^11*exp(5*te^2/T)-256/33*y1^11*exp(5*te^2/T)+256/33*y1^11*exp(5*t0^2/T)+256/33*y1^6*exp(5*t0^2/T)*y0^5-256/99*y0^3*x1^8*exp(-3*t0^2/T)-256/33*y1^8*y0^3*exp(5*te^2/T)+1280/33*y1^3*x1^8*exp(-3*t0^2/T)-1280/693*y0^5*x1^6*exp(-t0^2/T)-256/99*y0^7*x1^4*exp(t0^2/T)-256/33*y0^9*x1^2*exp(3*t0^2/T)+1280/33*y1^9*x1^2*exp(3*t0^2/T)+2560/33*y1^5*x1^6*exp(-t0^2/T)+256/33*y0^9*x1^2*exp(3*te^2/T)+2560/33*y1^7*x1^4*exp(t0^2/T)+256/33*y1*y0^10*exp(5*t0^2/T)-256/33*y1^4*y0^7*exp(5*te^2/T)+256/33*y1^5*y0^6*exp(5*t0^2/T)-256/33*y1*y0^10*exp(5*te^2/T)-2560/33*y1^5*x1^6*exp(-te^2/T)-1280/33*y1^9*x1^2*exp(3*te^2/T)+256/33*y1^10*exp(5*t0^2/T)*y0-256/33*y1^7*y0^4*exp(5*te^2/T)-256/33*y0*exp(-5*t0^2/T)*x1^10-256/33*y1^9*y0^2*exp(5*te^2/T)-256/33*y1*exp(-5*te^2/T)*x1^10-256/33*y1^2*y0^9*exp(5*te^2/T)+256/33*y1^7*y0^4*exp(5*t0^2/T)+256/33*y1^8*y0^3*exp(5*t0^2/T)+256/33*y1^9*y0^2*exp(5*t0^2/T)-256/33*y1^5*y0^6*exp(5*te^2/T)+256/33*y0*exp(-5*te^2/T)*x1^10+256/33*y1*exp(-5*t0^2/T)*x1^10+256/33*y1^2*y0^9*exp(5*t0^2/T)+256/99*y0^3*x1^8*exp(-3*te^2/T)+256/33*y1^4*y0^7*exp(5*t0^2/T)-256/33*y1^3*y0^8*exp(5*te^2/T)+256/33*y1^3*y0^8*exp(5*t0^2/T)-256/33*y1^10*exp(5*te^2/T)*y0+1280/693*y0^5*x1^6*exp(-te^2/T)-1280/33*y1^3*x1^8*exp(-3*te^2/T)+256/99*y0^7*x1^4*exp(te^2/T)-2560/33*y1^7*x1^4*exp(te^2/T)-256/33*y1^6*exp(5*te^2/T)*y0^5+256/15*y0^11*exp(5*t0^2/T)-1280/99*y1^4*x1^2*y0^5*exp(3*t0^2/T)+1024/99*y1^7*y0^2*x1^2*exp(3*t0^2/T)+512/33*y1^6*x1^4*y0*exp(t0^2/T)-512/33*y1^5*x1^4*y0^2*exp(t0^2/T)-5888/693*y1*x1^6*y0^4*exp(-t0^2/T)-512/33*y1^2*x1^2*y0^7*exp(3*t0^2/T)-512/33*y1^3*x1^2*y0^6*exp(3*t0^2/T)-256/11*y1^8*x1^2*y0*exp(3*te^2/T)+256/11*y1^2*x1^8*y0*exp(-3*te^2/T)+512/33*y1^3*x1^2*y0^6*exp(3*te^2/T)+512/33*y1^2*x1^2*y0^7*exp(3*te^2/T)-512/33*y1^4*x1^6*y0*exp(-t0^2/T)+16640/693*y1^3*x1^4*y0^4*exp(te^2/T)+2560/99*y1^4*y0^3*x1^4*exp(te^2/T)+512/33*y1^4*x1^6*y0*exp(-te^2/T)+256/33*y1^5*x1^2*y0^4*exp(3*te^2/T)+1280/99*y1*x1^2*y0^8*exp(3*te^2/T)+1280/99*y1*x1^8*y0^2*exp(-3*te^2/T)-256/11*y1^2*x1^8*y0*exp(-3*t0^2/T)+2048/99*y1^2*x1^6*y0^3*exp(-te^2/T)-16640/693*y1^3*x1^4*y0^4*exp(t0^2/T)+1024/33*y1^3*x1^6*y0^2*exp(-te^2/T)+5888/693*y1*x1^4*y0^6*exp(te^2/T)+1280/99*y1^4*x1^2*y0^5*exp(3*te^2/T)-2560/99*y1^4*y0^3*x1^4*exp(t0^2/T)-1024/99*y1^7*y0^2*x1^2*exp(3*te^2/T)-1280/99*y1*x1^2*y0^8*exp(3*t0^2/T)-256/33*y1^5*x1^2*y0^4*exp(3*t0^2/T)-512/33*y1^6*x1^4*y0*exp(te^2/T)-5888/693*y1*x1^4*y0^6*exp(t0^2/T)-1280/77*y1^2*x1^4*y0^5*exp(t0^2/T)-2048/99*y1^2*x1^6*y0^3*exp(-t0^2/T)-1280/99*y1*x1^8*y0^2*exp(-3*t0^2/T)+512/33*y1^5*x1^4*y0^2*exp(te^2/T)+1280/77*y1^2*x1^4*y0^5*exp(te^2/T)+5888/693*y1*x1^6*y0^4*exp(-te^2/T)+256/11*y1^8*x1^2*y0*exp(3*t0^2/T)-1024/33*y1^3*x1^6*y0^2*exp(-t0^2/T))*x0+(512/21*y1^2*x1^5*y0^3*exp(-te^2/T)+256/11*y1*x1*y0^8*exp(3*te^2/T)-512/33*y1^4*x1^5*y0*exp(-te^2/T)+1024/33*y1^3*x1^7*exp(-3*t0^2/T)+512/11*y1^5*x1^5*exp(-t0^2/T)+1024/99*y0^7*x1^3*exp(te^2/T)-256/33*y1^9*x1*exp(3*te^2/T)+1024/33*y1^7*x1^3*exp(t0^2/T)+1280/231*y0^5*x1^5*exp(-te^2/T)-1024/33*y1^7*x1^3*exp(te^2/T)+256/33*y0*exp(-5*te^2/T)*x1^9-512/11*y1^5*x1^5*exp(-te^2/T)-1024/33*y1^3*x1^7*exp(-3*te^2/T)-256/33*y1*exp(-5*te^2/T)*x1^9-1280/33*y0^9*x1*exp(3*t0^2/T)-512/99*y0^3*x1^7*exp(-3*t0^2/T)+256/33*y1^9*x1*exp(3*t0^2/T)-1280/231*y0^5*x1^5*exp(-t0^2/T)-1024/99*y0^7*x1^3*exp(t0^2/T)-256/33*y0*exp(-5*t0^2/T)*x1^9+256/33*y1*exp(-5*t0^2/T)*x1^9+512/99*y0^3*x1^7*exp(-3*te^2/T)+1280/33*y0^9*x1*exp(3*te^2/T)+2560/693*y1^4*x1^3*y0^3*exp(te^2/T)+512/33*y1*x1^7*y0^2*exp(-3*te^2/T)+256/33*y1^4*y0^5*x1*exp(3*t0^2/T)+1024/33*y1^6*x1^3*y0*exp(t0^2/T)-512/33*y1^3*x1^5*y0^2*exp(-t0^2/T)-512/33*y1^6*x1*y0^3*exp(3*te^2/T)-1024/99*y1^2*x1^7*y0*exp(-3*t0^2/T)-1280/77*y1*x1^5*y0^4*exp(-t0^2/T)-512/33*y1^7*x1*y0^2*exp(3*te^2/T)+12800/693*y1^3*x1^3*y0^4*exp(te^2/T)+1024/99*y1^2*x1*y0^7*exp(3*te^2/T)+1280/77*y1*x1^5*y0^4*exp(-te^2/T)+1024/99*y1^2*x1^7*y0*exp(-3*te^2/T)-1280/99*y1^5*x1*y0^4*exp(3*te^2/T)+512/21*y1^2*x1^3*y0^5*exp(te^2/T)-512/33*y1^5*x1^3*y0^2*exp(te^2/T)-12800/693*y1^3*x1^3*y0^4*exp(t0^2/T)-1024/99*y1^2*x1*y0^7*exp(3*t0^2/T)-256/11*y1*x1*y0^8*exp(3*t0^2/T)+2048/99*y1*x1^3*y0^6*exp(te^2/T)-1280/99*y1^8*y0*x1*exp(3*te^2/T)+512/33*y1^3*x1^5*y0^2*exp(-te^2/T)+1280/99*y1^5*x1*y0^4*exp(3*t0^2/T)-256/33*y1^4*y0^5*x1*exp(3*te^2/T)+1280/99*y1^8*y0*x1*exp(3*t0^2/T)-512/21*y1^2*x1^3*y0^5*exp(t0^2/T)-1024/33*y1^6*x1^3*y0*exp(te^2/T)+512/33*y1^6*x1*y0^3*exp(3*t0^2/T)+512/33*y1^4*x1^5*y0*exp(-t0^2/T)-512/33*y1*x1^7*y0^2*exp(-3*t0^2/T)-512/21*y1^2*x1^5*y0^3*exp(-t0^2/T)+512/33*y1^5*x1^3*y0^2*exp(t0^2/T)+512/33*y1^7*x1*y0^2*exp(3*t0^2/T)-2560/693*y1^4*x1^3*y0^3*exp(t0^2/T)-2048/99*y1*x1^3*y0^6*exp(t0^2/T))*x0^2+(-256/99*y1^8*y0*exp(3*te^2/T)-512/99*y1^7*y0^2*exp(3*te^2/T)+1280/99*y0^5*x1^4*exp(-te^2/T)+1024/33*y0^7*x1^2*exp(te^2/T)-7168/297*y1^3*x1^6*exp(-3*te^2/T)-2560/99*y1^5*x1^4*exp(-te^2/T)-1024/99*y1^7*x1^2*exp(te^2/T)-256/33*y1*exp(-5*te^2/T)*x1^8+256/99*y1^8*y0*exp(3*t0^2/T)-2560/297*y0^3*x1^6*exp(-3*t0^2/T)+2560/297*y1^6*y0^3*exp(3*t0^2/T)+512/99*y1^7*y0^2*exp(3*t0^2/T)-1024/33*y1^2*y0^7*exp(3*te^2/T)-7168/297*y1^3*y0^6*exp(3*te^2/T)+7168/297*y1^3*y0^6*exp(3*t0^2/T)-1280/99*y0^5*x1^4*exp(-t0^2/T)+1024/33*y1^2*y0^7*exp(3*t0^2/T)+1280/99*y1^5*y0^4*exp(3*t0^2/T)+1792/99*y1^4*y0^5*exp(3*t0^2/T)+1280/33*y1*y0^8*exp(3*t0^2/T)-1024/33*y0^7*x1^2*exp(t0^2/T)-1280/99*y1^5*y0^4*exp(3*te^2/T)+2560/99*y1^5*x1^4*exp(-t0^2/T)+1024/99*y1^7*x1^2*exp(t0^2/T)+256/33*y0*exp(-5*te^2/T)*x1^8+256/33*y1*exp(-5*t0^2/T)*x1^8-256/33*y0*exp(-5*t0^2/T)*x1^8+256/297*y1^9*exp(3*t0^2/T)-2560/297*y1^6*y0^3*exp(3*te^2/T)-1792/99*y1^4*y0^5*exp(3*te^2/T)-1280/33*y1*y0^8*exp(3*te^2/T)+2560/297*y0^3*x1^6*exp(-3*te^2/T)+1280/9*y0^9*exp(3*t0^2/T)-256/297*y1^9*exp(3*te^2/T)-1280/9*y0^9*exp(3*te^2/T)+7168/297*y1^3*x1^6*exp(-3*t0^2/T)-16640/693*y1*x1^4*y0^4*exp(-t0^2/T)-512/33*y1*x1^6*y0^2*exp(-3*t0^2/T)+2560/693*y1^3*y0^4*x1^2*exp(t0^2/T)+2048/99*y1^6*x1^2*y0*exp(t0^2/T)+16640/693*y1*x1^4*y0^4*exp(-te^2/T)-12800/693*y1^4*x1^2*y0^3*exp(te^2/T)-1024/33*y1*x1^2*y0^6*exp(t0^2/T)-2560/693*y1^3*x1^4*y0^2*exp(-te^2/T)+1024/33*y1*x1^2*y0^6*exp(te^2/T)-2560/99*y1^4*x1^4*y0*exp(-te^2/T)+512/33*y1^2*x1^2*y0^5*exp(te^2/T)-512/21*y1^5*x1^2*y0^2*exp(te^2/T)+12800/693*y1^2*x1^4*y0^3*exp(-te^2/T)+2560/693*y1^3*x1^4*y0^2*exp(-t0^2/T)+512/33*y1*x1^6*y0^2*exp(-3*te^2/T)-2560/693*y1^3*y0^4*x1^2*exp(te^2/T)-512/33*y1^2*x1^2*y0^5*exp(t0^2/T)-2048/99*y1^6*x1^2*y0*exp(te^2/T)+12800/693*y1^4*x1^2*y0^3*exp(t0^2/T)+2560/99*y1^4*x1^4*y0*exp(-t0^2/T)+512/21*y1^5*x1^2*y0^2*exp(t0^2/T)-12800/693*y1^2*x1^4*y0^3*exp(-t0^2/T))*x0^3+(-2560/99*y0^5*x1^3*exp(-t0^2/T)+1280/99*y1^5*x1^3*exp(-t0^2/T)+256/33*y1*exp(-5*t0^2/T)*x1^7+256/33*y0*exp(-5*te^2/T)*x1^7-256/33*y0*exp(-5*t0^2/T)*x1^7-256/33*y1*exp(-5*te^2/T)*x1^7+1280/99*y0^3*x1^5*exp(-3*te^2/T)-1792/99*y1^3*x1^5*exp(-3*te^2/T)-1280/99*y1^5*x1^3*exp(-te^2/T)-1280/99*y0^3*x1^5*exp(-3*t0^2/T)-2560/33*y0^7*x1*exp(t0^2/T)+2560/99*y0^5*x1^3*exp(-te^2/T)-256/99*y1^7*x1*exp(te^2/T)+2560/33*y0^7*x1*exp(te^2/T)+256/99*y1^7*x1*exp(t0^2/T)-16640/693*y1^4*x1*y0^3*exp(te^2/T)-1280/99*y1*x1^5*y0^2*exp(-3*t0^2/T)+256/33*y1^2*x1^5*y0*exp(-3*t0^2/T)-2560/99*y1*x1^3*y0^4*exp(-t0^2/T)+5888/693*y1^6*x1*y0*exp(t0^2/T)-16640/693*y1^4*x1^3*y0*exp(-te^2/T)+1792/99*y1^3*x1^5*exp(-3*t0^2/T)+2560/693*y1^2*x1^3*y0^3*exp(-te^2/T)-12800/693*y1^3*x1^3*y0^2*exp(-te^2/T)+512/33*y1*x1*y0^6*exp(te^2/T)-2560/99*y1^3*x1*y0^4*exp(te^2/T)-1280/77*y1^5*x1*y0^2*exp(te^2/T)-256/33*y1^2*x1^5*y0*exp(-3*te^2/T)+1280/99*y1*x1^5*y0^2*exp(-3*te^2/T)+2560/99*y1*x1^3*y0^4*exp(-te^2/T)+12800/693*y1^3*x1^3*y0^2*exp(-t0^2/T)+16640/693*y1^4*x1^3*y0*exp(-t0^2/T)+512/33*y1^2*x1*y0^5*exp(t0^2/T)+2560/99*y1^3*x1*y0^4*exp(t0^2/T)-5888/693*y1^6*x1*y0*exp(te^2/T)-512/33*y1*x1*y0^6*exp(t0^2/T)+16640/693*y1^4*x1*y0^3*exp(t0^2/T)-2560/693*y1^2*x1^3*y0^3*exp(-t0^2/T)+1280/77*y1^5*x1*y0^2*exp(t0^2/T)-512/33*y1^2*x1*y0^5*exp(te^2/T))*x0^4+(-1280/231*y1^5*y0^2*exp(te^2/T)-1280/231*y1^5*x1^2*exp(-te^2/T)-512/11*y0^5*x1^2*exp(-t0^2/T)-1792/99*y0^3*x1^4*exp(-3*t0^2/T)+2560/99*y1^3*y0^4*exp(t0^2/T)+512/11*y1^2*y0^5*exp(t0^2/T)+1280/99*y1^4*y0^3*exp(t0^2/T)+1280/231*y1^5*x1^2*exp(-t0^2/T)+1280/693*y1^6*y0*exp(t0^2/T)+1280/99*y1^3*x1^4*exp(-3*t0^2/T)+256/33*y0*x1^6*exp(-5*te^2/T)+256/33*y1*exp(-5*t0^2/T)*x1^6+1792/99*y0^3*x1^4*exp(-3*te^2/T)+512/11*y0^5*x1^2*exp(-te^2/T)-2560/33*y1*y0^6*exp(te^2/T)-256/33*y1*exp(-5*te^2/T)*x1^6-256/33*y0*x1^6*exp(-5*t0^2/T)-2560/99*y1^3*y0^4*exp(te^2/T)-512/11*y1^2*y0^5*exp(te^2/T)-1280/99*y1^4*y0^3*exp(te^2/T)-1280/693*y1^6*y0*exp(te^2/T)-1280/99*y1^3*x1^4*exp(-3*te^2/T)+1280/231*y1^5*y0^2*exp(t0^2/T)+2560/33*y1*y0^6*exp(t0^2/T)+512/33*y1^2*x1^2*y0^3*exp(-t0^2/T)-512/33*y1*x1^2*y0^4*exp(-t0^2/T)+1280/99*y1^2*x1^4*y0*exp(-3*t0^2/T)-512/33*y1^2*x1^2*y0^3*exp(-te^2/T)-1280/99*y1^2*x1^4*y0*exp(-3*te^2/T)-512/21*y1^3*x1^2*y0^2*exp(-te^2/T)+512/21*y1^3*x1^2*y0^2*exp(-t0^2/T)-1280/77*y1^4*x1^2*y0*exp(-te^2/T)+256/33*y1*x1^4*y0^2*exp(-3*te^2/T)+512/33*y1*x1^2*y0^4*exp(-te^2/T)+1280/77*y1^4*x1^2*y0*exp(-t0^2/T)-256/33*y1*x1^4*y0^2*exp(-3*t0^2/T)-256/693*y1^7*exp(te^2/T)+2560/3*y0^7*exp(t0^2/T)+256/693*y1^7*exp(t0^2/T)-2560/3*y0^7*exp(te^2/T))*x0^5-1280/33*y1^2*x1^9*y0*exp(-3*t0^2/T)-1280/33*y1^8*x1^3*y0*exp(3*t0^2/T)-256/99*y1*x1^3*y0^8*exp(3*t0^2/T)-1280/693*y1*x1^5*y0^6*exp(t0^2/T)-1024/33*y1^7*x1^3*y0^2*exp(3*t0^2/T)-256/33*y1*x1^9*y0^2*exp(-3*t0^2/T)-256/99*y1*x1^7*y0^4*exp(-t0^2/T)-1280/99*y1^4*x1^3*y0^5*exp(3*t0^2/T)-1792/99*y1^5*x1^3*y0^4*exp(3*t0^2/T)-512/99*y1^2*x1^3*y0^7*exp(3*t0^2/T)-2560/297*y1^3*x1^3*y0^6*exp(3*t0^2/T)-2560/99*y1^4*x1^5*y0^3*exp(t0^2/T)-512/11*y1^5*x1^5*y0^2*exp(t0^2/T)-1024/99*y1^2*x1^7*y0^3*exp(-t0^2/T)-1280/9*y1^9*x1^3*exp(3*t0^2/T)-1280/99*y1^3*x1^5*y0^4*exp(t0^2/T)-2560/33*y1^6*x1^5*y0*exp(t0^2/T)+256/33*y0^7*x1*exp(5*te^2/T)*y1^4+256/33*y0^8*x1*exp(5*te^2/T)*y1^3-2560/3*y1^7*x1^5*exp(t0^2/T)+2560/3*y1^5*x1^7*exp(-t0^2/T)+256/33*y0^11*x1*exp(5*te^2/T)-256/297*y0^9*x1^3*exp(3*t0^2/T)-256/693*y0^7*x1^5*exp(t0^2/T)-256/693*y0^5*x1^7*exp(-t0^2/T)-256/297*y0^3*x1^9*exp(-3*t0^2/T)+1280/9*y1^3*x1^9*exp(-3*t0^2/T)-7168/297*y1^6*x1^3*y0^3*exp(3*t0^2/T)+2560/3*y1^7*x1^5*exp(te^2/T)-2560/3*y1^5*x1^7*exp(-te^2/T)+1280/9*y1^9*x1^3*exp(3*te^2/T)-256/15*y1^11*x1*exp(5*t0^2/T)-1280/9*y1^3*x1^9*exp(-3*te^2/T)+256/693*y0^5*x1^7*exp(-te^2/T)+256/297*y0^3*x1^9*exp(-3*te^2/T)+256/297*y0^9*x1^3*exp(3*te^2/T)+256/693*y0^7*x1^5*exp(te^2/T)+256/33*y0^9*x1*exp(5*te^2/T)*y1^2-1280/231*y1^2*x1^5*y0^5*exp(t0^2/T)-256/33*y0^9*x1*exp(5*t0^2/T)*y1^2-256/33*y0^11*x1*exp(5*t0^2/T)+256/33*y0^6*x1*exp(5*te^2/T)*y1^5+256/33*y0^10*x1*exp(5*te^2/T)*y1+1280/231*y1^2*x1^5*y0^5*exp(te^2/T)+7168/297*y1^6*x1^3*y0^3*exp(3*te^2/T)+1024/33*y1^3*x1^7*y0^2*exp(-te^2/T)+256/33*y0^4*x1*exp(5*te^2/T)*y1^7+256/33*y0*x1*exp(5*te^2/T)*y1^10+2560/33*y1^4*x1^7*y0*exp(-te^2/T)+1280/33*y1^2*x1^9*y0*exp(-3*te^2/T)-256/15*y1*x1^11*exp(-5*te^2/T)-256/33*y0^8*x1*exp(5*t0^2/T)*y1^3+1280/33*y1^8*x1^3*y0*exp(3*te^2/T)+256/99*y1*x1^3*y0^8*exp(3*te^2/T)+1280/693*y1*x1^5*y0^6*exp(te^2/T)+1024/33*y1^7*x1^3*y0^2*exp(3*te^2/T)+256/99*y1*x1^7*y0^4*exp(-te^2/T)+256/33*y1*x1^9*y0^2*exp(-3*te^2/T)+2560/297*y1^3*x1^3*y0^6*exp(3*te^2/T)+1792/99*y1^5*x1^3*y0^4*exp(3*te^2/T)+512/99*y1^2*x1^3*y0^7*exp(3*te^2/T)+512/11*y1^5*x1^5*y0^2*exp(te^2/T)+1280/99*y1^4*x1^3*y0^5*exp(3*te^2/T)-1024/33*y1^3*x1^7*y0^2*exp(-t0^2/T)+1024/99*y1^2*x1^7*y0^3*exp(-te^2/T)+2560/99*y1^4*x1^5*y0^3*exp(te^2/T)+1280/99*y1^3*x1^5*y0^4*exp(te^2/T)+2560/33*y1^6*x1^5*y0*exp(te^2/T)+256/33*y0^2*x1*exp(5*te^2/T)*y1^9+256/15*y1*x1^11*exp(-5*t0^2/T)+256/15*y1^11*x1*exp(5*te^2/T)-256/33*y0^10*x1*exp(5*t0^2/T)*y1-256/33*y0^6*x1*exp(5*t0^2/T)*y1^5-256/33*y0^4*x1*exp(5*t0^2/T)*y1^7-256/33*y0^5*x1*exp(5*t0^2/T)*y1^6-256/33*y0^2*x1*exp(5*t0^2/T)*y1^9-256/33*y0^3*x1*exp(5*t0^2/T)*y1^8+256/33*y0^3*x1*exp(5*te^2/T)*y1^8-256/33*y0*x1*exp(5*t0^2/T)*y1^10-256/33*y0^7*x1*exp(5*t0^2/T)*y1^4+256/33*y0*x1^11*exp(-5*te^2/T)+256/33*y0^5*x1*exp(5*te^2/T)*y1^6-256/33*y0*x1^11*exp(-5*t0^2/T);
    elseif isequal(vel, @velDeformation) && isequal(pfun, @pfunConstant)
        T=2;
        flux = (16*sin(pi*x0)*cos(pi*x0)^3*cos(pi*y0)^4-16*sin(pi*x0)*cos(pi*x0)^3*cos(pi*y0)^2+2*sin(pi*x0)*cos(pi*x0)^3 ...
            -8*sin(pi*x0)*cos(pi*x0)*cos(pi*y0)^4+8*sin(pi*x0)*cos(pi*x0)*cos(pi*y0)^2-sin(pi*x0)*cos(pi*x0)-16*sin(pi*x1)*cos(pi*x1)^3*cos(pi*y1)^4+16*sin(pi*x1)*cos(pi*x1)^3*cos(pi*y1)^2-2*sin(pi*x1)*cos(pi*x1)^3+8*sin(pi*x1)*cos(pi*x1)*cos(pi*y1)^4-8*sin(pi*x1)*cos(pi*x1)*cos(pi*y1)^2+sin(pi*x1)*cos(pi*x1))*T*(sin(pi*t0/T)-sin(pi*te/T))/pi^2;
        
    elseif isequal(vel, @velExpDivergent) && isequal(pfun, @pfunExpDivergent)
        
        %   flux=(2 + t0)*(cosh(t0 + x0) - cosh(t0 + x1) - sinh(t0 + x0) + sinh(t0 + x1)) - (2 + te)*(cosh(te + x0) - cosh(te + x1) - sinh(te + x0) + sinh(te + x1));
        if (x0 - x1 + y0 - y1)==0
            flux=(-1).*exp(1).^((-1).*x0+(-1).*x1+(-1).*y0).*(exp(1).^(2.*x1)+(-1) ...
                .*exp(1).^(x0+x1)+(-1).*exp(1).^(x0+y0)+exp(1).^(x1+y0)+exp(1) ...
                .^x1.*(x0+(-1).*x1)).*(cosh(t0)+(-1).*cosh(te)+(-1).*sinh(t0)+ ...
                sinh(te));
            
        else
            % if (x0 - x1 + y0 - y1)==0, this expression will tend to infinite
            flux=(x0+(-1).*x1+y0+(-1).*y1).^(-1).*(((-1).*exp(1).^(x0+y0).*(((-1)+( ...
                -1).*t0).*x0+(1+t0).*x1+(-1).*(2+t0).*(y0+(-1).*y1))+(-1).*exp(1) ...
                .^(x1+y1).*((1+t0).*x0+(-1).*(1+t0).*x1+(2+t0).*(y0+(-1).*y1))+( ...
                -1).*exp(1).^(x0+x1+y0).*(x0+(-1).*x1+y0+(-1).*y1)+(-1).*exp(1).^( ...
                x1+y0+y1).*(x0+(-1).*x1+y0+(-1).*y1)+(-1).*exp(1).^(x0+x1+y1).*(( ...
                -1).*x0+x1+(-1).*y0+y1)+(-1).*exp(1).^(x0+y0+y1).*((-1).*x0+x1+( ...
                -1).*y0+y1)).*(cosh(t0)+(-1).*sinh(t0)).*(cosh(t0)+sinh(t0)).*( ...
                cosh(t0+x0+x1+y0+y1)+(-1).*sinh(t0+x0+x1+y0+y1))+(exp(1).^(x0+y0) ...
                .*(((-1)+(-1).*te).*x0+(1+te).*x1+(-1).*(2+te).*(y0+(-1).*y1))+ ...
                exp(1).^(x1+y1).*((1+te).*x0+(-1).*(1+te).*x1+(2+te).*(y0+(-1).* ...
                y1))+exp(1).^(x0+x1+y0).*(x0+(-1).*x1+y0+(-1).*y1)+exp(1).^(x1+y0+ ...
                y1).*(x0+(-1).*x1+y0+(-1).*y1)+exp(1).^(x0+x1+y1).*((-1).*x0+x1+( ...
                -1).*y0+y1)+exp(1).^(x0+y0+y1).*((-1).*x0+x1+(-1).*y0+y1)).*(cosh( ...
                te)+(-1).*sinh(te)).*(cosh(te)+sinh(te)).*(cosh(te+x0+x1+y0+y1)+( ...
                -1).*sinh(te+x0+x1+y0+y1)));
        end
        
        
        
    elseif isequal(vel, @velIntersection) && isequal(pfun,@pfunIntersection)
        flux=(1/24).*(exp(1).^((-4).*t0)+(-1).*exp(1).^((-4).*te)).*((-3).*pi.* ...
            (x0.^2+(-1).*x1.^2+y0.^2+(-1).*y1.^2).*(x0.^2+x1.^2+y0.^2+y1.^2)+( ...
            -2).*(x1.*y0+(-1).*x0.*y1).*(x0.^2+x0.*x1+x1.^2+y0.^2+y0.*y1+ ...
            y1.^2));
        
        
    elseif isequal(vel, @velStreakintersect) && isequal(pfun,@pfunStreakintersect)
        
        flux=(1/12).*((-3120).*t0.*x0+612.*t0.^2.*x0+(-60).*t0.^3.*x0+3.* ...
            t0.^4.*x0+3120.*te.*x0+(-612).*te.^2.*x0+60.*te.^3.*x0+(-3).* ...
            te.^4.*x0+(-612).*t0.*x0.^2+90.*t0.^2.*x0.^2+(-6).*t0.^3.*x0.^2+ ...
            612.*te.*x0.^2+(-90).*te.^2.*x0.^2+6.*te.^3.*x0.^2+(-60).*t0.* ...
            x0.^3+6.*t0.^2.*x0.^3+60.*te.*x0.^3+(-6).*te.^2.*x0.^3+(-3).*t0.* ...
            x0.^4+3.*te.*x0.^4+3120.*t0.*x1+(-612).*t0.^2.*x1+60.*t0.^3.*x1+( ...
            -3).*t0.^4.*x1+(-3120).*te.*x1+612.*te.^2.*x1+(-60).*te.^3.*x1+3.* ...
            te.^4.*x1+612.*t0.*x1.^2+(-90).*t0.^2.*x1.^2+6.*t0.^3.*x1.^2+( ...
            -612).*te.*x1.^2+90.*te.^2.*x1.^2+(-6).*te.^3.*x1.^2+60.*t0.* ...
            x1.^3+(-6).*t0.^2.*x1.^3+(-60).*te.*x1.^3+6.*te.^2.*x1.^3+3.*t0.* ...
            x1.^4+(-3).*te.*x1.^4+(-60).*t0.*x0.*y0+6.*t0.^2.*x0.*y0+60.*te.* ...
            x0.*y0+(-6).*te.^2.*x0.*y0+(-8).*t0.*x0.^2.*y0+8.*te.*x0.^2.*y0+ ...
            60.*t0.*x1.*y0+(-6).*t0.^2.*x1.*y0+(-60).*te.*x1.*y0+6.*te.^2.* ...
            x1.*y0+4.*t0.*x0.*x1.*y0+(-4).*te.*x0.*x1.*y0+4.*t0.*x1.^2.*y0+( ...
            -4).*te.*x1.^2.*y0+(-312).*t0.*y0.^2+30.*t0.^2.*y0.^2+(-2).* ...
            t0.^3.*y0.^2+312.*te.*y0.^2+(-30).*te.^2.*y0.^2+2.*te.^3.*y0.^2+( ...
            -60).*t0.*x0.*y0.^2+6.*t0.^2.*x0.*y0.^2+60.*te.*x0.*y0.^2+(-6).* ...
            te.^2.*x0.*y0.^2+(-6).*t0.*x0.^2.*y0.^2+6.*te.*x0.^2.*y0.^2+(-8).* ...
            t0.*y0.^3+8.*te.*y0.^3+(-3).*t0.*y0.^4+3.*te.*y0.^4+(-60).*t0.* ...
            x0.*y1+6.*t0.^2.*x0.*y1+60.*te.*x0.*y1+(-6).*te.^2.*x0.*y1+(-4).* ...
            t0.*x0.^2.*y1+4.*te.*x0.^2.*y1+60.*t0.*x1.*y1+(-6).*t0.^2.*x1.*y1+ ...
            (-60).*te.*x1.*y1+6.*te.^2.*x1.*y1+(-4).*t0.*x0.*x1.*y1+4.*te.* ...
            x0.*x1.*y1+8.*t0.*x1.^2.*y1+(-8).*te.*x1.^2.*y1+312.*t0.*y1.^2+( ...
            -30).*t0.^2.*y1.^2+2.*t0.^3.*y1.^2+(-312).*te.*y1.^2+30.*te.^2.* ...
            y1.^2+(-2).*te.^3.*y1.^2+60.*t0.*x1.*y1.^2+(-6).*t0.^2.*x1.*y1.^2+ ...
            (-60).*te.*x1.*y1.^2+6.*te.^2.*x1.*y1.^2+6.*t0.*x1.^2.*y1.^2+(-6) ...
            .*te.*x1.^2.*y1.^2+8.*t0.*y1.^3+(-8).*te.*y1.^3+3.*t0.*y1.^4+(-3) ...
            .*te.*y1.^4+4.*(2.*x0.^3+(-2).*x1.^3+(-15).*y0.^2+(-3).*t0.*y0.^2+ ...
            (-10).*y0.^3+15.*y1.^2+3.*t0.*y1.^2+10.*y1.^3+x1.*(318+(-6).* ...
            t0.^2+y0.^2+78.*y1+(-2).*y1.^2+y0.*(78+y1)+(-15).*t0.*(2+y0+y1))+ ...
            x0.*((-318)+6.*t0.^2+2.*y0.^2+y0.*((-78)+5.*x1+(-1).*y1)+(-78).* ...
            y1+(-5).*x1.*y1+(-1).*y1.^2+15.*t0.*(2+y0+y1))+(-1).*x0.^2.*(6.* ...
            t0+5.*(3+2.*y0+y1))+x1.^2.*(6.*t0+5.*(3+y0+2.*y1))).*cos(t0)+(-4) ...
            .*(2.*x0.^3+(-2).*x1.^3+(-15).*y0.^2+(-3).*te.*y0.^2+(-10).*y0.^3+ ...
            15.*y1.^2+3.*te.*y1.^2+10.*y1.^3+x1.*(318+(-6).*te.^2+y0.^2+78.* ...
            y1+(-2).*y1.^2+y0.*(78+y1)+(-15).*te.*(2+y0+y1))+x0.*((-318)+6.* ...
            te.^2+2.*y0.^2+y0.*((-78)+5.*x1+(-1).*y1)+(-78).*y1+(-5).*x1.*y1+( ...
            -1).*y1.^2+15.*te.*(2+y0+y1))+(-1).*x0.^2.*(6.*te+5.*(3+2.*y0+y1)) ...
            +x1.^2.*(6.*te+5.*(3+y0+2.*y1))).*cos(te)+3000.*x0.*sin(t0)+( ...
            -1272).*t0.*x0.*sin(t0)+120.*t0.^2.*x0.*sin(t0)+636.*x0.^2.*sin( ...
            t0)+(-120).*t0.*x0.^2.*sin(t0)+40.*x0.^3.*sin(t0)+(-3000).*x1.* ...
            sin(t0)+1272.*t0.*x1.*sin(t0)+(-120).*t0.^2.*x1.*sin(t0)+(-636).* ...
            x1.^2.*sin(t0)+120.*t0.*x1.^2.*sin(t0)+(-40).*x1.^3.*sin(t0)+(-12) ...
            .*t0.*x0.*y0.*sin(t0)+8.*x0.^2.*y0.*sin(t0)+12.*t0.*x1.*y0.*sin( ...
            t0)+(-4).*x0.*x1.*y0.*sin(t0)+(-4).*x1.^2.*y0.*sin(t0)+324.* ...
            y0.^2.*sin(t0)+(-60).*t0.*y0.^2.*sin(t0)+40.*x0.*y0.^2.*sin(t0)+ ...
            20.*x1.*y0.^2.*sin(t0)+8.*y0.^3.*sin(t0)+(-12).*t0.*x0.*y1.*sin( ...
            t0)+4.*x0.^2.*y1.*sin(t0)+12.*t0.*x1.*y1.*sin(t0)+4.*x0.*x1.*y1.* ...
            sin(t0)+(-8).*x1.^2.*y1.*sin(t0)+(-20).*x0.*y0.*y1.*sin(t0)+20.* ...
            x1.*y0.*y1.*sin(t0)+(-324).*y1.^2.*sin(t0)+60.*t0.*y1.^2.*sin(t0)+ ...
            (-20).*x0.*y1.^2.*sin(t0)+(-40).*x1.*y1.^2.*sin(t0)+(-8).*y1.^3.* ...
            sin(t0)+(-3000).*x0.*sin(te)+1272.*te.*x0.*sin(te)+(-120).*te.^2.* ...
            x0.*sin(te)+(-636).*x0.^2.*sin(te)+120.*te.*x0.^2.*sin(te)+(-40).* ...
            x0.^3.*sin(te)+3000.*x1.*sin(te)+(-1272).*te.*x1.*sin(te)+120.* ...
            te.^2.*x1.*sin(te)+636.*x1.^2.*sin(te)+(-120).*te.*x1.^2.*sin(te)+ ...
            40.*x1.^3.*sin(te)+12.*te.*x0.*y0.*sin(te)+(-8).*x0.^2.*y0.*sin( ...
            te)+(-12).*te.*x1.*y0.*sin(te)+4.*x0.*x1.*y0.*sin(te)+4.*x1.^2.* ...
            y0.*sin(te)+(-324).*y0.^2.*sin(te)+60.*te.*y0.^2.*sin(te)+(-40).* ...
            x0.*y0.^2.*sin(te)+(-20).*x1.*y0.^2.*sin(te)+(-8).*y0.^3.*sin(te)+ ...
            12.*te.*x0.*y1.*sin(te)+(-4).*x0.^2.*y1.*sin(te)+(-12).*te.*x1.* ...
            y1.*sin(te)+(-4).*x0.*x1.*y1.*sin(te)+8.*x1.^2.*y1.*sin(te)+20.* ...
            x0.*y0.*y1.*sin(te)+(-20).*x1.*y0.*y1.*sin(te)+324.*y1.^2.*sin(te) ...
            +(-60).*te.*y1.^2.*sin(te)+20.*x0.*y1.^2.*sin(te)+40.*x1.*y1.^2.* ...
            sin(te)+8.*y1.^3.*sin(te));
        
        
        
    elseif isequal(vel, @velRotationTimeDep) && isequal(pfun,@pfunConstant)
        flux=0;%only work for closed curve
    elseif isequal(vel, @velStrainTimeDep) && isequal(pfun,@pfunConstant)
        flux=0; %only work for closed curve
        
    elseif  isequal(vel, @velShear)
        if isequal(pfun,@pfunConstant)
           flux=(1/2).*(t0+(-1).*te).*((-2).*y0+y0.^2+(-1).*((-2)+y1).*y1);
           
           
        end
  
    end
else

    
end

end

function y=fluxnu(t,s,p0,p1,velCase,funt)
r=p1-p0;
n=[r(2),-r(1)];
y=zeros(size(t));
for i=1:size(t,1)
    for j=1:size(t,2)
        y(i,j)=funt(t(i,j),p0+s(i,j)*r)*n*velCase(t(i,j),p0+s(i,j)*r);
    end
end
end
